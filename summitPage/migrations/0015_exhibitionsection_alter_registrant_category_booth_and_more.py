# Generated by Django 5.2.7 on 2025-10-14 06:18

import django.db.models.deletion
import django.utils.timezone
import summitPage.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('summitPage', '0014_alter_registrant_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExhibitionSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='registrant',
            name='category',
            field=models.CharField(choices=summitPage.models.get_category_id, max_length=50, verbose_name='Registration Category'),
        ),
        migrations.CreateModel(
            name='Booth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booth_number', models.CharField(max_length=20, unique=True)),
                ('booth_type', models.CharField(choices=[('standard', 'Standard Booth'), ('premium', 'Premium Booth'), ('custom', 'Custom Booth')], default='standard', max_length=20)),
                ('size', models.CharField(help_text='e.g., 3m x 3m', max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_booked', models.BooleanField(default=False)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booths', to='summitPage.exhibitionsection')),
            ],
        ),
        migrations.CreateModel(
            name='Exhibitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(choices=[('Prof', 'Prof.'), ('Dr', 'Dr.'), ('Mr', 'Mr.'), ('Mrs', 'Mrs.'), ('Ms', 'Ms.')], max_length=10)),
                ('first_name', models.CharField(max_length=100)),
                ('second_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('organization_type', models.CharField(max_length=200)),
                ('job_title', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('startup', 'Startup'), ('corporate', 'Corporate'), ('government', 'Government Agency'), ('academic', 'Academic Institution'), ('ngo', 'NGO'), ('other', 'Other')], max_length=50)),
                ('product_description', models.TextField(blank=True, null=True)),
                ('national_id_number', models.CharField(max_length=50)),
                ('national_id_scan', models.FileField(upload_to='exhibitors/id_scans/')),
                ('passport_photo', models.ImageField(upload_to='exhibitors/photos/')),
                ('privacy_agreed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='summitPage.booth')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='summitPage.exhibitionsection')),
            ],
        ),
        migrations.CreateModel(
            name='EmailLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField()),
                ('attempts', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('exhibitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emaillog', to='summitPage.exhibitor')),
            ],
        ),
        migrations.CreateModel(
            name='BoothBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved', models.BooleanField(default=False)),
                ('booth', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='summitPage.booth')),
                ('exhibitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='summitPage.exhibitor')),
            ],
        ),
    ]
